package dsa.LinkedList;

public class Insertion {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr [] = {12,5,6,8};
		int n = arr.length;
		int k = 3;
		
		Node head = conarr2ll(arr,n);

		
//		INSERTION AT HEAD	
//		System.out.println("After Inserting at Head: ");
//		head = insertHead(head,100);
		
//		INSERTION AT TAIL
//		System.out.println("After Insert at End: ");
//		head = insertTail(head, 50);
		
//		INSERTION AT KTH POSITION
		System.out.println("After Insert at kth loc : ");
		head = insertkth(head,k,333);
		Node temp = head;
		
		while(temp!=null) {
			System.out.print(temp.data+" ");
			temp = temp.next;
		}
		

	}

	private static Node insertkth(Node head, int k, int val) {
		// TODO Auto-generated method stub
		
		if(head == null) {
			if(k==1) return new Node(val);
			else return null;
		}
		if(k==1) {
			Node temp = new Node(val,head);
			return temp;
			
		}
		
		int cnt = 0;
		Node temp = head;
		while(temp != null) {
			cnt++;
			
			if(cnt==k-1) {
				Node x = new Node(val);
				x.next = temp.next;
				temp.next = x;
				break;
			}
			temp = temp.next;
		}
		return head;
	}

	private static Node insertTail(Node head, int val) {
		// TODO Auto-generated method stub
		if(head == null) return new Node(val);
		Node temp = head;
		
		while(temp.next!=null) {
			temp = temp.next;
		}
		Node newNode = new Node(val);
		temp.next= newNode;
		return head;
	}

	private static Node insertHead(Node head, int val) {
		// TODO Auto-generated method stub
		Node temp = new Node(val, head);
		return temp;
	}

	private static Node conarr2ll(int[] arr, int n) {
		// TODO Auto-generated method stub
		Node head = new Node(arr[0]);
		Node mover = head;
		
		for(int i=1; i<n; i++) {
			Node temp = new Node(arr[i]);
			mover.next = temp;
			mover = temp;
		}
		return head;
	}

}
