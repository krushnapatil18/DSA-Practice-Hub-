package dsa.doublyLL;


public class remove_head {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[] = {1,2,3,4,5,6,7,8,9};
		int n = arr.length;
		System.out.print("The Doubly LinkedList after performing all operations: ");
		
		Node2 head = conarrtodl(arr,n);
		head = delhead(head);
		head = deltail(head);
		Node2 temp = head;
		while(temp!=null) {
			System.out.print(temp.data+" ");
			temp = temp.next;
		}

	}

	private static Node2 deltail(Node2 head) {
		// TODO Auto-generated method stub
		Node2 tail = head;
		while(tail.next!=null){
			tail = tail.next;
		}
		Node2 prev = tail.back;
		prev.next = null;
		tail.back = null;
		return head;
	}

	private static Node2 delhead(Node2 head) {
		// TODO Auto-generated method stub
		if(head == null || head.next == null) return null;
		Node2 prev = head;
		head = head.next;
		head.back = null;
		prev.next = null;
		
		return head;
	}

	private static Node2 conarrtodl(int[] arr, int n) {
		// TODO Auto-generated method stub
		Node2 head = new Node2(arr[0]);
		Node2 prev = head;
		for(int i=1; i<n; i++) {
			Node2 temp = new Node2(arr[i],null,prev);
			prev.next = temp;
			prev = temp;
		}
		return head;
	}

}
