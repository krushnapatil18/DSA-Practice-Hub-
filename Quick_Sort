package dsa;

public class QuickSort {
	
	public static int partition(int[] arr, int low, int high) {
		// TODO Auto-generated method stub
		int pivat = arr[low];
		int i = low;
		int j = high;
		
		while(i<j) {
			while( arr[i]<=pivat && i <high) {
				i++;
			}
			while(arr[j]>=pivat && j>low) {
				j--;
			}
			if(i<j) {
				int temp = arr[i]; //swap i and j if not crossed
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
		arr[low] = arr[j];//place pivat to correct position
		arr[j] = pivat;
		return j;
	}
	
	public static void quickSort(int[] arr,int low,int high) {
		if(low<high) {
			int pindex = partition(arr,low,high);
			quickSort(arr,low,pindex-1);
			quickSort(arr,pindex+1,high);
		}
	}



	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int [] arr = {1,4,7,3,5,2,6,1};
		int n = arr.length;
		System.out.println("Before sorting");
		for(int i=0;i<n;i++) {
			System.out.print(arr[i]+" ");
		}
		System.out.println();
		
		quickSort(arr,0,n-1);
		
		System.out.println();
		
		System.out.println("After sorting");
		for(int i=0;i<n;i++) {
			System.out.print(arr[i]+" ");
		}

	}

}
