package dsa.Binary_Search;

public class UpperBound_BS {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[] = {1, 2, 4, 5, 6, 8, 9, 10, 13, 16, 20};
		int n = arr.length;
		int target = 8;
		int k = ub(arr, n, target);
		System.out.println("Upper Bound Index is: " + k);
	}

	private static int ub(int[] arr, int n, int target) {
		// TODO Auto-generated method stub
		int ans = n;
		int low = 0;
		int high = n - 1;

		while (low <= high) {
			int mid = (low + high) / 2;

			if (arr[mid] > target) {
				ans = mid;
				high = mid - 1;
			} else {
				low = mid + 1;
			}
		}
		return ans;
	}
}
