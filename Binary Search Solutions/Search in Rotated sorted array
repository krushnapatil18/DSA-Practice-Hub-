package dsa.Binary_Search;

public class Search_in_RotatedArray {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr [] = {6,7,8,9,1,2,3,4,5};
		int n = arr.length;
		int k = 8;
		int a = SIRSA(arr,n,k);
		System.out.println("The Index is : "+a);
	

	}

	private static int SIRSA(int[] arr, int n, int k) {
		// TODO Auto-generated method stub
		int low = 0;
		int high = n-1;
		while(low<=high) {
			int mid = (low+high)/2;
			if(arr[mid]==k) return mid;
			
			// If Left half is sorted
			if(arr[low] <= arr[mid]) {
				if(arr[low] <= k && k <= arr[mid]) {
					high = mid-1;
				}
				else low = mid+1;
			}
			// If Right is sorted
			else {
				if(arr[mid] <= k && k <= arr[high]) low = mid+1;
				
				else high = mid-1;
			}
			
		}
		
		return -1;
		
	}

}
