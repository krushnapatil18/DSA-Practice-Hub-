package dsa.Binary_Search;

import java.util.Arrays;

public class AggresiveCows {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[] = {0,3,4,7,9,10};
		int n = arr.length;
		int k =4;
		int a = aggcow(arr,k,n);
		System.out.println(a);
	}

	private static int aggcow(int[] arr, int k, int n) {
		// TODO Auto-generated method stub
		Arrays.sort(arr);
		int low = 0;
		int high = arr[n-1] - arr[0];
		int ans = 0;
		while(low<=high) {
			
			int mid = (low+high)/2;
			
			if(canwecount(arr,mid,k)==true) {
				ans = mid;
				low = mid+1;
			}
			else {
				high = mid -1;
			}
		}
		return ans;
		
		
	}

	private static boolean canwecount(int[] arr, int dist, int cow) {
		// TODO Auto-generated method stub
		int n = arr.length;
		int last = arr[0];
		int cntcow = 1;
		
		for(int i = 0; i < n ; i++) {
			if(arr[i]-last >= dist) {
				cntcow++;
				last = arr[i];
			}
			if(cntcow>=cow) return true;
		}
		return false;
	}

}
