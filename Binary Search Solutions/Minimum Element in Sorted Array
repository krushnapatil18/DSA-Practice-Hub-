package dsa.Binary_Search;
import java.util.*;

public class Find_Minimum_in_Roteted_SortedArray {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr [] = {7,1,2};
		int n = arr.length;
		int k = min(arr,n);
		System.out.println("The Minimum Element is: "+k);
	}

	private static int min(int[] arr, int n) {
		// TODO Auto-generated method stub
		int low = 0;
		int high = n-1;
		int ans = Integer.MAX_VALUE;
		while(low<=high) {
			int mid = (low+high)/2;
			
			if(arr[low]<=arr[mid]) {
				ans = Math.min(ans, arr[low]);
				low = mid+1;
			}
			else {
				ans = Math.min(ans,arr[mid]);
				high = mid-1;
			}
		}
		return ans;
	}

}
