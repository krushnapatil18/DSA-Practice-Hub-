package dsa.Binary_Search;

public class serachInsert {
    
    public static int searchInsert(int[] arr, int m) {
        int n = arr.length;
        int ans = n;
        int low = 0;
        int high = n - 1;

        while (low <= high) {
            int mid = (low + high) / 2;

            if (arr[mid] >= m) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        int[] arr = {1, 3, 5, 6};
        int m = 5;

        int result = searchInsert(arr, m);
        System.out.println("The index to insert " + m + " is: " + result);

        m = 2;
        result = searchInsert(arr, m);
        System.out.println("The index to insert " + m + " is: " + result);
        
        m = 7;
        result = searchInsert(arr, m);
        System.out.println("The index to insert " + m + " is: " + result);
    }
}
