package dsa.Binary_Search;

public class KthMissing {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[] = {2,3,4,7,11};
		int n = arr.length;
		int k = 5;
		//brute force
//		int ans = brutef(arr,k);
//		System.out.println("Kth missing num is: "+ans);
		
		//optimal
		int ans1 = missngk(arr,k);
		System.out.println("Kth missing num is: "+ans1);
	}

	private static int missngk(int[] arr, int k) {
		// TODO Auto-generated method stub
		int n = arr.length;
		int low = 0;
		int high = n-1;
		
		while(low<=high) {
			int mid = (low+high)/2;
			
			int missing = arr[mid]-(mid+1); //ex 7 - 3(index)+1 = 3num missed
			
			if(missing<k) low = mid+1;
			else high = mid-1;
		}
		return low+k; //from formula in book
		
	}

	private static int brutef(int[] arr, int k) {
		// TODO Auto-generated method stub
		int n = arr.length;
		for(int i = 0; i < n; i++) {
			if(arr[i]<=k) k++;
			else break;
		}
		return k;
	}

}
