package StackAndQ;

import java.util.Stack;

public class InfixtoPostfix {
	static int precedence(char ch) {
		
		if(ch == '+' || ch == '-') return 1;
		else if(ch == '*' || ch =='/') return 2;
		else return 0;
	}

	static String toPostfix(String infix) {
		
		Stack<Character> stack = new Stack<>();
		String postfix = "";
		
		for(int i=0; i<infix.length(); i++) {
			
			char ch = infix.charAt(i);
			
			if((ch >= 'a' && ch <= 'z') || (ch >='A' && ch <='Z' || Character.isDigit(ch))) {
				
				postfix+=ch;
			}
			else if(ch=='(') {
				stack.push(ch);
			}
			
            else if (ch == ')') {
                while (!stack.isEmpty() && stack.peek() != '(') {
                    postfix = postfix + stack.pop();
                }
                if (!stack.isEmpty()) {
                    stack.pop(); // remove '('
                }
            }
            else {
                while (!stack.isEmpty() && precedence(ch) <= precedence(stack.peek())) {
                    postfix = postfix + stack.pop();
                }
                stack.push(ch);
            }
			
		}
        while (!stack.isEmpty()) {
            postfix = postfix + stack.pop();
        }

		
		return postfix;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
        String infix = "a+b*c-d";
        System.out.println("Postfix: " + toPostfix(infix));

	}

}
