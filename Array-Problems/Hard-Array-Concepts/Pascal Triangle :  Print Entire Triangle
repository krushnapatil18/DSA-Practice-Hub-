package dsa;
import java.util.*;

public class PascalTriangle {

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        int n = 5;

        System.out.println("The Entire Traingle of :"+n);
        List<List<Integer>> ans = pascalTriangle(n);
        for (List<Integer> it : ans) {
            for (int ele : it) {
                System.out.print(ele + " ");
            }
            System.out.println();
        }
    }

    private static long nCr(int n, int m) {
        long res = 1;
        for (int i = 0; i < m; i++) {
            res = res * (n - i);
            res = res / (i + 1);
        }
        return res;
    }

    public static List<List<Integer>> pascalTriangle(int n) {
        List<List<Integer>> ans = new ArrayList<>();

        // Store the entire Pascal's triangle:
        for (int row = 1; row <= n; row++) {
            List<Integer> tempLst = new ArrayList<>(); // temporary list
            for (int col = 1; col <= row; col++) {
                tempLst.add((int) nCr(row - 1, col - 1));
            }
            ans.add(tempLst);
        }
        return ans;
    }
}
