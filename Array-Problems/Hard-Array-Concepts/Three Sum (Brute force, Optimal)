package dsa;
import java.util.*;

public class ThreeSum {

    public static void main(String[] args) {
        int arr[] = {-1, 0, 1, 2, -1, -4};
        int n = arr.length;

        Set<List<Integer>> st = new HashSet<>();//set to store unique triplet

        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    if (arr[i] + arr[j] + arr[k] == 0) {
                       
                        List<Integer> temp = Arrays.asList(arr[i], arr[j], arr[k]);//temp list to store triplets
                        temp.sort(null);//sorting of triplets
                        st.add(temp); //add unique ele to set
                    }
                }
            }
        }
        List<List<Integer>> ans = new ArrayList<>(st); //set to list
        
        for (int i = 0; i < ans.size(); i++) { //print
            System.out.println(ans.get(i));
        }
    }
}

//Optimal
//package dsa;
//
//import java.util.*;
//
//public class ThreeSum {
//
//    public static List<List<Integer>> triplet(int[] arr) {
//        List<List<Integer>> ans = new ArrayList<>();
//        Arrays.sort(arr);
//
//        for (int i = 0; i < arr.length; i++) {
//            // Skip duplicates
//            if (i > 0 && arr[i] == arr[i - 1]) continue;
//
//            int j = i + 1, k = arr.length - 1;
//            while (j < k) {
//                int sum = arr[i] + arr[j] + arr[k];
//                if (sum == 0) {
//                    ans.add(Arrays.asList(arr[i], arr[j], arr[k]));
//                    j++; k--; 
//                    // Skip duplicates for j and k
//                    while (j < k && arr[j] == arr[j - 1]) j++;
//                    while (j < k && arr[k] == arr[k + 1]) k--;
//                } else if (sum < 0) {
//                    j++;
//                } else {
//                    k--;
//                }
//            }
//        }
//        return ans;
//    }
//
//    public static void main(String[] args) {
//        int[] arr = { -1, 0, 1, 2, -1, -4 };
//        List<List<Integer>> ans = triplet(arr);
//        for (List<Integer> triplet : ans) {
//            System.out.println(triplet);
//        }
//    }
//}
