package dsa;
import java.util.*;
public class Merging_Overlapping_Interval {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[][] arr = {{1, 3}, {8, 10}, {2, 6}, {15, 18}};
		int n = arr.length;
		
		Arrays.sort(arr,(a,b)-> a[0]-b[0]); //sort 2d array based on values in 1st col of each row
		List<List<Integer>> ans = new ArrayList<>();
		
		for(int i=0;i<n;i++) {
			if(ans.isEmpty() || arr[i][0] > ans.get(ans.size()-1).get(1)) {  //if no overlap, new interval
				ans.add(Arrays.asList(arr[i][0], arr[i][1]));
			}
			else {
				ans.get(ans.size()-1).set(1,
						Math.max(ans.get(ans.size()-1).get(1), arr[i][1]));
			}
			
		}
		for (int i = 0; i < ans.size(); i++) {
		    System.out.print(ans.get(i) + " ");
		}
		System.out.println();

	}

}
