package dsa;
import java.util.*;
public class FourSum_Optimal {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] a = {4, 3, 3, 4, 4, 2, 1, 2, 1, 1};
        int target = 9;
        int n = a.length;
        
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(a);
        
        for(int i=0;i<n;i++) {
        	if(i>0 && a[i]==a[i-1]) continue;
        	for(int j=i+1;j<n;j++) {
        		if(j>i+1 && a[j]==a[j-1]) continue;
        		int k= j+1;
        		int l = n-1;
        		while(k<l) {
        			 long sum = a[i]+a[j];
        			 sum += a[k];
        			 sum += a[l];
        			 
        			 if(sum==target) {
        				 List<Integer> temp = new ArrayList<>();
        				 temp.add(a[i]);
        				 temp.add(a[j]);
        				 temp.add(a[k]);
        				 temp.add(a[l]);
        				 ans.add(temp);
        				 k++;
        				 l--;
        				 while(k<l &&a[k]==a[k-1]) k++;
        				 while(k<l && a[l]==a[l+1]) l--;
        			 }
        			 else if(sum<target) k++;
        			 else {
        				 l--;
        			 }
        		}
        	}
        }
        for(int i=0;i<ans.size();i++) {
        	System.out.println(ans.get(i));
        }

	}

}
